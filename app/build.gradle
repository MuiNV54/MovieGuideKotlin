apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-allopen'

def getProperty(String filename, String propName) {
  def propsFile = rootProject.file(filename)
  if (propsFile.exists()) {
    def props = new Properties()
    props.load(new FileInputStream(propsFile))
    if (props[propName] != null) {
      return props[propName]
    } else {
      print("No such property " + propName + " in file " + filename);
    }
  } else {
    print(filename + " does not exist!")
  }
}

androidExtensions {
  experimental = true
}

android {
  compileSdkVersion 27
  buildToolsVersion "27.0.1"
  defaultConfig {
    applicationId "com.example.nguyenvanmui.myapplication"
    minSdkVersion 19
    targetSdkVersion 27
    versionCode 1
    versionName "1.0"

    buildConfigField "String", "TMDB_API_KEY",
        "\"${getProperty("local.properties", "tmdb_api_key")}\""
    buildConfigField "String", "TMDB_BASE_URL", "\"http://api.themoviedb.org/\""

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
}

allOpen {
  annotation("com.example.nguyenvanmui.myapplication.TestOpen")
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

  String archVersion = '1.0.0'
  implementation "android.arch.lifecycle:runtime:$archVersion"
  implementation "android.arch.lifecycle:extensions:$archVersion"
  kapt "android.arch.lifecycle:compiler:$archVersion"
  implementation "android.arch.persistence.room:runtime:$archVersion"
  kapt "android.arch.persistence.room:compiler:$archVersion"
  implementation "android.arch.persistence.room:rxjava2:$archVersion"

  implementation 'com.squareup.retrofit2:retrofit:2.3.0'
  implementation "com.squareup.retrofit2:converter-gson:2.3.0"
  implementation 'com.squareup.okhttp3:okhttp:3.9.0'
  implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
  implementation 'com.squareup.okhttp3:logging-interceptor:3.8.1'

  String supportVersion = '27.0.0'
  implementation "com.android.support:appcompat-v7:$supportVersion"
  implementation "com.android.support:design:$supportVersion"
  implementation "com.android.support:support-vector-drawable:$supportVersion"
  implementation 'com.android.support.constraint:constraint-layout:1.0.2'
  implementation "com.android.support:palette-v7:${supportVersion}"

  implementation 'com.squareup.moshi:moshi:1.1.0'
  implementation 'com.github.bumptech.glide:glide:4.2.0'

  debugCompile 'com.amitshekhar.android:debug-db:1.0.2'

  testImplementation "junit:junit:4.12"
  testImplementation "org.mockito:mockito-all:1.10.19"
  testImplementation "org.hamcrest:hamcrest-all:1.3"
  testImplementation "android.arch.core:core-testing:$archVersion"
  testImplementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
  testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
  testImplementation "org.mockito:mockito-core:2.8.9"

  // Android Testing Support Library's runner and rules
  androidTestCompile "com.android.support.test:runner:1.0.1"
  androidTestCompile "com.android.support.test:rules:1.0.1"
  androidTestCompile "android.arch.persistence.room:testing:1.0.0"
  androidTestCompile "android.arch.core:core-testing:$archVersion"

  // Dependencies for Android unit tests
  androidTestCompile "junit:junit:4.12"
  androidTestCompile "org.mockito:mockito-core:2.7.19", { exclude group: 'net.bytebuddy' }
  androidTestCompile "org.mockito:mockito-android:2.8.8"
  androidTestCompile('com.nhaarman:mockito-kotlin-kt1.1:1.5.0') {
    exclude group: 'org.jetbrains.kotlin'
  }
  androidTestCompile "com.linkedin.dexmaker:dexmaker-mockito:2.2.0"

  // Espresso UI Testing
  String espressoVersion = "3.0.1"
  androidTestCompile "com.android.support.test.espresso:espresso-core:$espressoVersion"
  androidTestCompile "com.android.support.test.espresso:espresso-contrib:$espressoVersion"
  androidTestCompile "com.android.support.test.espresso:espresso-intents:$espressoVersion"

  // Resolve conflicts between main and test APK:
  androidTestCompile "com.android.support:support-annotations:$supportVersion"
  androidTestCompile "com.android.support:support-v4:$supportVersion"
  androidTestCompile "com.android.support:appcompat-v7:$supportVersion"
  androidTestCompile "com.android.support:design:$supportVersion"

  String daggerVersion = '2.13'
  compile "com.google.dagger:dagger:$daggerVersion"
  kapt "com.google.dagger:dagger-compiler:$daggerVersion"

  compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
  compile 'io.reactivex.rxjava2:rxjava:2.1.5'
}
repositories {
  mavenCentral()
}
